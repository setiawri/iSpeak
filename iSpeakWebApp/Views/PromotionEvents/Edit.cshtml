@model iSpeakWebApp.Models.PromotionEventsModel

@{
    iSpeakWebApp.Models.UserAccountRolesModel access = iSpeakWebApp.Controllers.UserAccountsController.getUserAccess(Session);
    string ControllerName = "PromotionEvents";
    ViewBag.SelectedNavigationMenu = "Settings";
    ViewBag.Root = "PROMOTION EVENTS";
    ViewBag.Title = "Edit";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm())
        {
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Branches_Id)
                <!-- Form inputs -->
                <div class="card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">@ViewBag.Root</h5>
                    </div>
                    <div class="card-body">
                        <fieldset class="mb-3">
                            <legend class="text-uppercase font-size-sm font-weight-bold">@ViewBag.Title</legend>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-lg-2 required" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "col-form-label col-lg-2 required" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.TotalDays, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.TotalDays, new { htmlAttributes = new { @class = "form-control positiveintegeronly" } })
                                    @Html.ValidationMessageFor(model => model.TotalDays, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.EventFee, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.EventFee, new { htmlAttributes = new { @class = "form-control positiveintegeronly" } })
                                    @Html.ValidationMessageFor(model => model.EventFee, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.PersonnelCost, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.PersonnelCost, new { htmlAttributes = new { @class = "form-control positiveintegeronly" } })
                                    @Html.ValidationMessageFor(model => model.PersonnelCost, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.AdditionalCost, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.AdditionalCost, new { htmlAttributes = new { @class = "form-control positiveintegeronly" } })
                                    @Html.ValidationMessageFor(model => model.AdditionalCost, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "col-form-label col-lg-2" })
                                <div class="col-lg-5">
                                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </fieldset>

                        @if (access.PromotionEvents_Edit)
                        {
                            <div>
                                <button type="submit" class="btn btn-primary">Submit<i class="icon-paperplane ml-2"></i></button>
                                <a href="javascript:void(0)" onclick="Action('Index', '@ControllerName')" class="btn btn-warning">Cancel<i class="icon-cross2 ml-2"></i></a>
                            </div>
                        }
                    </div>
                </div>
                <!-- /form inputs -->
            }
        }
    </div>
    <!-- /content area -->
</div>
