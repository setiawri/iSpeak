@model IEnumerable<iSpeakWebApp.Models.RemindersModel>
@{ 
    iSpeakWebApp.Models.UserAccountRolesModel access = iSpeakWebApp.Controllers.UserAccountsController.getUserAccess(Session);
    ViewBag.SelectedNavigationMenu = "Home";
}

<div id="ReminderPartialView" class="row mt-0 ml-0">
    @if (access.Reminders_Add)
    {
        <div class="row ml-0 mr-2">
            <label class="mb-0">&nbsp;</label>
            <a href="@Url.Action("Create", "Reminders")" class="btn btn-success form-control"><i class="icon-plus22 mr-2"></i>CREATE</a>
        </div>
    }

    <div class="row ml-0 mr-2" style="width:100px;">
        <label class="mb-0">Keyword</label>
        <div class="input-group">
            <input type="text" name="FILTER_Keyword" id="FILTER_Keyword" class="form-control" />
        </div>
    </div>

    <div class="row ml-0 mr-2" style="width:150px;">
        <label class="mb-0">Status</label>
        <div class="input-group">
            @Html.DropDownList("ReminderStatus", EnumHelper.GetSelectList(typeof(EnumReminderStatuses)), "Incomplete", new { @class = "select2", @style = "height:auto;" })
        </div>
    </div>

    <div class="ml-0 mr-2">
        <label class="mb-0">&nbsp;</label>
        <button type="button" class="btn btn-outline-primary form-control" onclick="LoadReminders()"><i class="icon-reload-alt mr-2"></i>LOAD</button>
    </div>

</div>

<div class="table-responsive">
    <table id="datatableReminder" class="table table-hover datatable">
        <thead>
            <tr>
                <th></th>
                <th style="width:120px;">Date</th>
                <th>Description</th>
                <th style="width:150px;">Status</th>
                <th class="non-searchable non-sortable" style="width:100px;"></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        LoadReminders();
        $('#datatableReminder').DataTable().column(0).visible(false);
        UpdateReminderCount('@ViewBag.ReminderCount');
    });

    function LoadReminders() {
        console.log(getDDLSelectedValue('ReminderStatus'));
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetData", "Reminders")',
            data: {
                FILTER_Keyword: getValueString('FILTER_Keyword'),
                status: getDDLSelectedValue('ReminderStatus')
            },
            success: function (data) {
                var datatable = $('#datatableReminder').DataTable();
                datatable.clear();
                $.each(data.result, function (index, row) {
                    var status = '';
                    if (row.Status_enumid == '@((int)EnumReminderStatuses.New)')
                        status = '<span class="badge badge-dark d-block">New</span>';
                    else if (row.Status_enumid == '@((int)EnumReminderStatuses.InProgress)')
                        status = '<span class="badge badge-info d-block">In Progress</span>';
                    else if (row.Status_enumid == '@((int)EnumReminderStatuses.OnHold)')
                        status = '<span class="badge bg-brown d-block">On Hold</span>';
                    else if (row.Status_enumid == '@((int)EnumReminderStatuses.Waiting)')
                        status = '<span class="badge badge-warning d-block">Waiting</span>';
                    else if (row.Status_enumid == '@((int)EnumReminderStatuses.Completed)')
                        status = '<span class="badge badge-primary d-block">Completed</span>';
                    else if (row.Status_enumid == '@((int)EnumReminderStatuses.Cancel)')
                        status = '<span class="badge badge-danger d-block">Cancelled</span>';

                    var actionLinks = '';
                    if ('@access.Reminders_Edit' == 'True')
                        actionLinks += '<a href="javascript:void(0)" onclick="Edit(\'' + row.Id + '\')">Edit</a>'
                    actionLinks = appendWithDelimiter(actionLinks, '<a href="javascript:void(0)" onclick="Log(\'' + row.Id + '\')">Log</a>', ' • ');

                    datatable.row.add([
                        formatDate(parseJSONDate(row.Timestamp), 'yyyy MM dd'),
                        formatDate(parseJSONDate(row.Timestamp), 'dd/MM/yyyy'),
                        row.Description,
                        status,
                        actionLinks
                    ]);
                });
                datatable.draw();
            }, //end success
            error: function (result) {
                bootbox.alert({ backdrop: true, message: "Error " + result });
            } //end error
        }); //end ajax
    }

    function Edit(id) {
        var url = '@Url.Action("Edit","Reminders", new { id = "__data" })';
        window.location.href = url.replace("__data", id);
    }

</script>
