@model IEnumerable<iSpeakWebApp.Models.UserAccountsModel>
@{
    ViewBag.SelectedNavigationMenu = "Home";

    List<iSpeakWebApp.Models.UserAccountRolesModel> UserAccountRoles = iSpeakWebApp.Controllers.UserAccountRolesController.get();
}

<div class="row">
    <div class="row ml-2 mr-0" style="width:190px;">
        <label class="mb-0">Month</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <button type="button" class="btn btn-light" onclick="MonthsDropdownChange('MonthsDropdown', '@EnumActions.Previous.ToString()')">&lt;</button>
                <select id="MonthsDropdown" class="form-control select2">
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <option value="3">March</option>
                    <option value="4">April</option>
                    <option value="5">May</option>
                    <option value="6">June</option>
                    <option value="7">July</option>
                    <option value="8">August</option>
                    <option value="9">September</option>
                    <option value="10">October</option>
                    <option value="11">November</option>
                    <option value="12">December</option>
                </select>
            </div>
            <button type="button" class="btn btn-light" onclick="MonthsDropdownChange('MonthsDropdown', '@EnumActions.Next.ToString()')">&gt;</button>
        </div>
    </div>

    <div class="row ml-1" style="width:200px;">
        <label class="mb-0">Role</label>
        <div class="input-group">
            @Html.DropDownList("UserAccountRoles", ViewBag.UserAccountRoles as SelectList, "ALL", new { @class = "select2", @style = "height:auto;" })
        </div>
    </div>

    <div class="ml-3">
        <label class="mb-0">&nbsp;</label>
        <button type="button" class="btn btn-outline-primary form-control" onclick="LoadBirthdays()"><i class="icon-reload-alt mr-2"></i>LOAD</button>
    </div>
</div>

<div class="table-responsive">
    <table id="datatableBirthday" class="table table-hover datatable">
        <thead>
            <tr>
                <th></th>
                <th style="width:100px;"></th>
                <th style="width:150px;">Birthday</th>
                <th style="width:150px;">Active Lesson</th>
                <th>Name</th>
                <th>Phone</th>
                <th>Roles</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<script type="text/javascript">

    var UserAccountRolesModel = @Html.Raw(Json.Encode(UserAccountRoles));

    $(document).ready(function () {

        $('#MonthsDropdown').val('@DateTime.UtcNow.Month').trigger('change');

        $('#datatableBirthday').DataTable().column(0).visible(false);

        UpdateBirthdayCount('@ViewBag.BirthdayCount');
    });

    function LoadBirthdays() {
        var isCurrentMonth = getValueInt('MonthsDropdown') == ((new Date()).getMonth() + 1);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetBirthdayData", "UserAccounts")',
            data: {
                month: $('#MonthsDropdown').val(),
                UserAccountRoles_Id: $('#UserAccountRoles').val()
            },
            success: function (data) {
                var datatable = $('#datatableBirthday').DataTable();
                datatable.clear();
                var remainingDayCount = 0;
                var todayDate = (new Date()).getDate();
                var birthday;
                var remainingDayCount;
                var badge;
                $.each(data.result, function (index, row) {
                    birthday = parseJSONDate(row.Birthday);
                    remainingDayCount = birthday.getDate() - todayDate;

                    badge = '';
                    if (isCurrentMonth) {
                        if (remainingDayCount == 0) {
                            badge = '<span style="width:70px;" class="badge badge-success">Today</span>';
                        } else {
                            badge = '<span style="width:70px;" class="badge badge-primary">In ' + remainingDayCount + ' day'+ (remainingDayCount > 1 ? 's' : '')+'</span>';
                        }
                    }

                    datatable.row.add([
                        remainingDayCount,
                        badge,
                        formatDate(birthday, 'dd MMM yyyy'),
                        "<a href='/SaleInvoices/Index?FILTER_chkDateFrom=false&FILTER_chkDateTo=false&FILTER_Keyword=" + row.Fullname+"' target='_blank'>"+row.ActiveLessonPackages+"</a>",
                        "<a href='/UserAccounts/Index?FILTER_Keyword=" + row.Fullname + "' target='_blank'>" + row.Fullname + "</a>",
                        row.Phone1,
                        getUserAccountRolesName(row.Roles)
                    ]);
                });
                datatable.draw();
            }, //end success
            error: function (result) {
                bootbox.alert({ backdrop: true, message: "Error " + result });
            } //end error
        }); //end ajax

        if (isCurrentMonth) {
            $('#datatableBirthday').DataTable().column(1).visible(true);
        } else {
            $('#datatableBirthday').DataTable().column(1).visible(false);
        }
    }

    function getUserAccountRolesName(idList) {
        var roles = '';
        $.each(idList.split(','), function (index, id) {
            $.each(UserAccountRolesModel, function (modelIndex, models) {
                if (models.Id == id) {
                    roles = appendWithDelimiter(roles,
                        '<span style="width:70px;" class="badge ' + badgeColors[modelIndex]+ '">'+models.Name+'</span>'
                        , ' ');
                }
            });
        });
        return roles;
    }


</script>