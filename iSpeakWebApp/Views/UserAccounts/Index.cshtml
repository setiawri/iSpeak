@model IEnumerable<iSpeakWebApp.Models.UserAccountsModel>

@{
    iSpeakWebApp.Models.UserAccountRolesModel access = iSpeakWebApp.Controllers.UserAccountsController.getUserAccess(Session);
    string ControllerName = "UserAccounts";
    ViewBag.SelectedNavigationMenu = "Accounts";
    ViewBag.Title = "ACCOUNTS";
    ViewBag.Subtitle = "Index";

    List<iSpeakWebApp.Models.UserAccountRolesModel> UserAccountRoles = iSpeakWebApp.Controllers.UserAccountRolesController.get();
    List<iSpeakWebApp.Models.LanguagesModel> Languages = iSpeakWebApp.Controllers.LanguagesController.get(Session);
}

<div class="content-wrapper">
    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm("Index", ControllerName, FormMethod.Post))
        {
            <!-- Form inputs -->
            <div class="card animated bounceInLeft">
                <div class="card-header header-elements-inline pb-1">
                    <h5 class="card-title text-uppercase">@ViewBag.Title</h5>
                    <i class="icon-info22 text-primary ml-2" data-container="body" data-toggle="popover" data-placement="left" data-content="Shows only accounts that has been assigned to the selected branch"></i>
                </div>
                <div class="card-body">
                    <div class="row mx-0">
                        @if (access.UserAccounts_Add)
                        {
                            <div class="mr-2">
                                <label class="mb-0">&nbsp;</label>
                                <div><a href="javascript:void(0)" onclick="Action('Create', '@ControllerName')" class="btn btn-success"><i class="icon-plus22 mr-2"></i>CREATE</a></div>
                            </div>
                        }

                        <div class="row ml-0 mr-2" style="width:150px;">
                            <label class="mb-0">Keyword</label>
                            <div class="input-group">
                                <input type="text" name="FILTER_Keyword" id="FILTER_Keyword" class="form-control" />
                            </div>
                        </div>

                        <div class="row ml-0 mr-2">
                            <label class="mb-0">Interest</label>
                            <div class="input-group">
                                @Html.DropDownList("FILTER_Languages_Id", ViewBag.Languages as SelectList, "ALL", new { @class = "select2", @style = "height:auto;" })
                            </div>
                        </div>

                        <div class="row ml-0 mr-2">
                            <label class="mb-0">Active</label>
                            <div class="input-group">
                                <select id="FILTER_Active" name="FILTER_Active" class="custom-select">
                                    <option value="" selected>ALL</option>
                                    <option value="1">Active</option>
                                    <option value="0">Not Active</option>
                                </select>
                            </div>
                        </div>
                        <div class="ml-0 mr-2">
                            <label class="mb-0">&nbsp;</label>
                            <button type="submit" onclick="showLoadingSpinner()" class="btn btn-outline-primary form-control"><i class="icon-reload-alt mr-2"></i>LOAD</button>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-hover datatable">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.Fullname)</th>
                                    <th>Info</th>
                                    <th class="text-right" style="width:150px;">@Html.DisplayNameFor(model => model.ActiveLessonPackages)</th>
                                    <th class="non-searchable non-sortable" style="width:200px;"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td class="align-top">
                                                <div>@Html.DisplayFor(modelItem => item.Fullname)</div>
                                                <div>Id: @Html.DisplayFor(modelItem => item.No), Username: @Html.DisplayFor(modelItem => item.Username)</div>
                                                <div>
                                                    @{
                                                        if (item.Roles_List != null)
                                                        {
                                                            foreach (string Roles_Id in item.Roles_List)
                                                            {
                                                                Guid Id = new Guid(Roles_Id);
                                                                for (int i = 0; i < UserAccountRoles.Count; i++)
                                                                {
                                                                    if (UserAccountRoles[i].Id == Id)
                                                                    {
                                                                        <span class="badge @(Helper.badgeColors[i])" style="width:70px;">@(UserAccountRoles[i].Name)</span>
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                </div>
                                            </td>
                                            <td class="align-top">
                                                <div>@Html.DisplayFor(modelItem => item.Email)</div>
                                                <div>@Html.DisplayFor(modelItem => item.Phone1) @(string.IsNullOrWhiteSpace(item.Phone2) ? "" : ", ") @Html.DisplayFor(modelItem => item.Phone2)</div>
                                                <div>
                                                    @{
                                                        if (item.Interest_List != null)
                                                        {
                                                            foreach (string Languages_Id in item.Interest_List)
                                                            {
                                                                Guid Id = new Guid(Languages_Id);
                                                                for (int i = 0; i < Languages.Count; i++)
                                                                {
                                                                    if (Languages[i].Id == Id)
                                                                    {
                                                                        <span class="badge @(Helper.badgeColors[i])" style="width:70px;">@(Languages[i].Name)</span>
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                </div>
                                            </td>
                                            <td class="align-top text-right">
                                                @Html.ActionLink(item.ActiveLessonPackages.ToString(), "Index", "SaleInvoices", new { FILTER_Keyword = @item.Fullname, FILTER_chkDateFrom = false, FILTER_chkDateTo = false }, new { @target="_blank"})
                                            </td>
                                            <td class="align-top">
                                                @if (item.Active)
                                                {
                                                    <span class="badge badge-success d-block">ACTIVE</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-dark d-block">NOT ACTIVE</span>
                                                }
                                                @if (access.UserAccounts_Edit)
                                                {
                                                    <a href="javascript:void(0)" onclick="ActionWithId('@item.Id', 'Edit', '@ControllerName')">Edit</a> @:•
                                                }
                                                <a href="javascript:void(0)" onclick="Log('@item.Id')">Log</a>
                                                @if (access.UserAccounts_ResetPassword)
                                                { 
                                                    @:• <a href="javascript:void(0)" onclick="AjaxUpdate('Ajax_ResetPassword', '@ControllerName', '@item.Id')">Reset Password</a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /form inputs -->
        }
    </div>
    <!-- /content area -->
</div>
