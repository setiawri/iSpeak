@model iSpeakWebApp.Models.UserAccountsModel

@{
    iSpeakWebApp.Models.UserAccountRolesModel access = iSpeakWebApp.Controllers.UserAccountsController.getUserAccess(Session);
    string ControllerName = "UserAccounts";
    ViewBag.SelectedNavigationMenu = "Accounts";
    ViewBag.Root = "ACCOUNT";
    ViewBag.Title = "Create";
}

<div class="content-wrapper">

    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Username)
            @Html.HiddenFor(model => model.Password)
            @Html.HiddenFor(model => model.Branches_Id)
            @Html.HiddenFor(model => model.Active)
            @Html.HiddenFor(model => model.ResetPassword)
            <!-- Form inputs -->
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">@ViewBag.Root</h5>
                </div>
                <div class="card-body">
                    <fieldset class="mb-3">
                        <legend class="text-uppercase font-size-sm font-weight-bold">@ViewBag.Title</legend>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "col-form-label col-lg-1 required" })
                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "col-form-label col-lg-1 required" })
                            <div class="col-lg-2">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control daterange-picker" } })
                                    <span class="input-group-append">
                                        <span class="input-group-text"><i class="icon-calendar"></i></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </fieldset>

                    @if (access.UserAccounts_Add)
                    {
                        <div>
                            <button type="submit" class="btn btn-primary">Submit<i class="icon-paperplane ml-2"></i></button>
                            <a href="javascript:void(0)" onclick="Action('Index', '@ControllerName')" class="btn btn-warning">Cancel<i class="icon-cross2 ml-2"></i></a>
                        </div>
                    }
                </div>
            </div>
            <!-- /form inputs -->
        }
    </div>
    <!-- /content area -->

</div>

<script type="text/javascript">

    $(document).ready(function () {
        setDateRangePicker('Birthday', '@string.Format("{0:yyyy/MM/dd}", DateTime.Now)');
    });

</script>
