@model IEnumerable<iSpeakWebApp.Models.PaymentsModel>

@{
    iSpeakWebApp.Models.UserAccountRolesModel access = iSpeakWebApp.Controllers.UserAccountsController.getUserAccess(Session);
    string ControllerName = "Payments";
    ViewBag.SelectedNavigationMenu = "Sales";
    ViewBag.Title = "PAYMENTS";
    ViewBag.Subtitle = "Index";
}

<div class="content-wrapper">
    <!-- Content area -->
    <div class="content">
        @using (Html.BeginForm("Index", ControllerName, FormMethod.Post))
        {
            <!-- Form inputs -->
            <div class="card animated bounceInLeft">
                <div class="card-header header-elements-inline pb-1">
                    <h5 class="card-title text-uppercase">@ViewBag.Title</h5>
                    <i class="icon-info22 text-primary ml-2" data-container="body" data-toggle="popover" data-placement="left" data-content="Approved items cannot be cancelled"></i>
                </div>
                <div class="card-body">

                    <div class="row mx-0">
                        <div class="row ml-0 mr-2" style="width:100px;">
                            <label class="mb-0">No</label>
                            <div class="input-group">
                                <input type="text" name="FILTER_Keyword" id="FILTER_Keyword" class="form-control" />
                            </div>
                        </div>

                        <div class="row ml-0 mr-2" style="width:100px;">
                            <label class="mb-0">Invoice</label>
                            <div class="input-group">
                                <input type="text" name="FILTER_InvoiceNo" id="FILTER_InvoiceNo" class="form-control" />
                            </div>
                        </div>

                        <div class="row ml-0 mr-2" style="width:150px;">
                            <label class="mb-0">Date From</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        @Html.CheckBox("FILTER_chkDateFrom", true, new { @class = "form-check-input check-styled" })
                                    </div>
                                </div>
                                @Html.Editor("FILTER_DateFrom", new { htmlAttributes = new { @class = "form-control daterange-picker" } })
                            </div>
                        </div>

                        <div class="row ml-0 mr-2" style="width:150px;">
                            <label class="mb-0">Date To</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        @Html.CheckBox("FILTER_chkDateTo", true, new { @class = "form-check-input check-styled" })
                                    </div>
                                </div>
                                @Html.Editor("FILTER_DateTo", new { htmlAttributes = new { @class = "form-control daterange-picker" } })
                            </div>
                        </div>

                        <div class="row ml-0 mr-2" style="width:80px;">
                            <label class="mb-0">Cancelled</label>
                            <div class="input-group">
                                <select id="FILTER_Cancelled" name="FILTER_Cancelled" class="custom-select">
                                    <option value="" selected>ALL</option>
                                    <option value="1">YES</option>
                                    <option value="0">NO</option>
                                </select>
                            </div>
                        </div>

                        @if (access.Payments_Approve)
                        {
                            <div class="row ml-0 mr-2" style="width:80px;">
                                <label class="mb-0">Approved</label>
                                <div class="input-group">
                                    <select id="FILTER_Approved" name="FILTER_Approved" class="custom-select">
                                        <option value="" selected>ALL</option>
                                        <option value="1">YES</option>
                                        <option value="0">NO</option>
                                    </select>
                                </div>
                            </div>
                        }

                        <div class="ml-0 mr-2">
                            <label class="mb-0">&nbsp;</label>
                            <button type="submit" id="LoadData" onclick="showLoadingSpinner()" class="btn btn-outline-primary form-control"><i class="icon-reload-alt mr-2"></i>LOAD</button>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-hover datatable">
                            <thead>
                                <tr>
                                    <th style="width:50px;">@Html.DisplayNameFor(model => model.No)</th>
                                    <th style="width:150px;" class="non-sortable">@Html.DisplayNameFor(model => model.Timestamp)</th>
                                    <th style="width:120px;" class="text-right">@Html.DisplayNameFor(model => model.CashAmount)</th>
                                    <th style="width:120px;" class="text-right">@Html.DisplayNameFor(model => model.DebitNumber)</th>
                                    <th style="width:120px;" class="text-right">@Html.DisplayNameFor(model => model.ConsignmentAmount)</th>
                                    @if (access.Payments_Approve)
                                    {
                                        <th class="non-searchable non-sortable" style="width:0px;">Approved</th>
                                    }
                                    <th class="non-sortable">@Html.DisplayNameFor(model => model.Notes)</th>
                                    @if (access.Payments_Edit)
                                    {
                                        <th class="non-searchable non-sortable" style="width:70px;"></th>
                                    }
                                    <th class="non-searchable non-sortable" style="width:120px;"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    var rowno = 0;
                                    foreach (var item in Model)
                                    {
                                        rowno++;
                                        <tr>
                                            <td class="align-top">@Html.DisplayFor(modelItem => item.No)</td>
                                            <td class="align-top">@Html.DisplayFor(modelItem => item.Timestamp)</td>
                                            <td class="align-top text-right">@Html.DisplayFor(modelItem => item.CashAmount)</td>
                                            <td class="align-top text-right">
                                                <div>@Html.DisplayFor(modelItem => item.DebitAmount)</div>
                                                @if (item.DebitAmount > 0)
                                                {
                                                    <div>
                                                        [@Html.DisplayFor(modelItem => item.DebitBank)]
                                                        @if (!string.IsNullOrEmpty(item.DebitNumber) && item.DebitNumber.Length > 4)
                                                        {
                                                            @:*@item.DebitNumber.Substring(item.DebitNumber.Length - 4, 4)
                                                        }
                                                        else
                                                        {
                                                            @item.DebitNumber
                                                        }
                                                    </div>
                                                    <div>@(item.DebitOwnerName == null ? "" : string.Format("{0}", item.DebitOwnerName.Split(' ')))</div>
                                                }
                                            </td>
                                            <td class="align-top text-right">@Html.DisplayFor(modelItem => item.ConsignmentAmount)</td>
                                            @if (access.Payments_Approve)
                                            {
                                                <td class="align-top" style="text-align:center;">
                                                    <input type="checkbox" id='@("chkApprove_" + rowno)' onclick="Update_Approved(this, '@item.Id')" @(item.Approved ? "checked" : "") />
                                                </td>
                                            }
                                            <td class="align-top">
                                                @if (item.Cancelled)
                                                {
                                                    <div>
                                                        <span class="badge badge-danger">CANCELLED</span>                                                
                                                        @if (!string.IsNullOrEmpty(item.CancelNotes))
                                                        {
                                                            @Html.DisplayFor(modelItem => item.CancelNotes)
                                                        }
                                                    </div>
                                                }
                                                <div>@Html.DisplayFor(modelItem => item.Notes)</div>
                                            </td>
                                            @if (access.Payments_Edit)
                                            {
                                                <td class="align-top">
                                                </td>
                                            }
                                            <td class="align-top">
                                                @if (!item.Cancelled)
                                                {
                                                    <div><a href="javascript:void(0)" id='@("lnkCancel_" + rowno)' class='@(item.Approved ? "d-none" : "")'><span class="badge badge-warning d-block mr-1" style="width:50px;" data-toggle="modal" data-target="#modal_cancel" onclick="PopulateCancelModal('@item.Id','@item.No')">CANCEL</span></a></div>
                                                }
                                                @*<a href="javascript:void(0)" onclick="AjaxGet('@item.Id', 'Payment @item.No', 'medium', 'Ajax_GetDetails', '@ControllerName')">View</a> @:•*@
                                                <a href="javascript:void(0)" onclick="ActionWithId('@item.Id', 'Print', '@ControllerName', 'true')">Receipt</a>
                                                • <a href="javascript:void(0)" onclick="Log('@item.Id')">Log</a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /form inputs -->
        }

        <!-- Cancel form modal -->
        <div id="modal_cancel" class="modal fade" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-warning">
                        <h6 class="modal-title">Cancel Payment</h6>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <form action="#" class="form-horizontal">
                        <div class="modal-body">
                            <div style="display: none">
                                <input class="form-control" id="modal_cancel-Id" />
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-2">Payment</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="modal_cancel-No" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-form-label col-sm-2">Notes</label>
                                <div class="col-sm-10">
                                    <textarea class="form-control" id="modal_cancel-Notes" rows="2" placeholder="Cancel Reason"></textarea>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn bg-success" onclick="Cancel()">Submit</button>
                            <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /cancel form modal -->

    </div>
    <!-- /content area -->
</div>


<script type="text/javascript">

    $(document).ready(function () {
        setDateRangePicker('FILTER_DateFrom', '@string.Format("{0:yyyy/MM/dd}", DateTime.Today.AddMonths(-2))');
        setDateRangePicker('FILTER_DateTo', '@string.Format("{0:yyyy/MM/dd}", DateTime.Today)');
    });

    function Update_Approved(control, id) {
        AjaxUpdate('Ajax_Update_Approved', '@ControllerName', id, control.checked, function () {
            toggleVisibility('lnkCancel_' + getRowNo(control));
        });
    }

    function applyLast() {
    }

    // CANCEL PAYMENT ==============================================================================================================================================

    function PopulateCancelModal(id, no) {
        $('#modal_cancel-Id').val(id);
        $('#modal_cancel-No').val(no);
        $('#modal_cancel-Notes').val('');
    }

    function Cancel() {
        if (!event.detail || event.detail == 1) {
            if ($('#modal_cancel-Notes').val() == '') {
                showMessage('Please provide reason for cancellation.', 'modal_cancel-Notes');
            }
            else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Ajax_Update_Cancelled", ControllerName)',
                    data: {
                        id: $('#modal_cancel-Id').val(),
                        notes: $('#modal_cancel-Notes').val()
                    },
                    success: function (data) {
                        $('#LoadData').trigger('click');
                    }, //end success
                    error: function (data) {
                        showMessage("ERROR: " + data.statusText);
                    } //end error
                }); //end ajax
            }
        }
    }

    $('#modal_cancel').on('shown.bs.modal', function () {
        $('#modal_cancel-Notes').focus();
    })

    //==============================================================================================================================================================

</script>