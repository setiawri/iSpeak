@using iSpeakWebApp.Controllers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@Helper.COMPANYNAME</title>
    @Html.Partial("Scripts")
</head>
<body>
    <!-- Main navbar ----------------------------------------------------------------------------------------------------------------------------------->
    <div class="navbar navbar-expand-md navbar-dark">
        <div class="d-md-none">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-mobile">
                <i class="icon-tree5"></i>
            </button>
        </div>
        <div class="collapse navbar-collapse" id="navbar-mobile">
            <span class="navbar-text ml-md-3 mr-md-auto h1 my-0 py-1">@Helper.COMPANYNAME</span>
            <span class="navbar-text">
            </span>
            <ul class="navbar-nav">
                <li class="nav-item dropdown dropdown-user">
                    <a href="#" class="navbar-nav-link dropdown-toggle" data-toggle="dropdown">
                        <img src="@Helper.getImageUrl("profile.png", Request, Server)" class="rounded-circle" alt="">
                        @*<span>@Session[OperatorController.SESSION_Username]</span>*@
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        @*<a href="@Url.Action("ChangePassword", "Manage")" class="dropdown-item"><i class="icon-lock2"></i> Change Password</a>*@
                        @*<a href="@Url.Action("LogOff", OperatorController.LOGIN_CONTROLLERNAME, new { Area = "" })" class="dropdown-item"><i class="icon-switch2"></i> Logout</a>*@
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <!-- /Main navbar ---------------------------------------------------------------------------------------------------------------------------------->
    <!-- Secondary navbar ------------------------------------------------------------------------------------------------------------------------------>
    <div class="navbar navbar-expand-md navbar-light">
        <div class="text-center d-md-none w-100">
            <button type="button" class="navbar-toggler dropdown-toggle" data-toggle="collapse" data-target="#navbar-navigation">
                <i class="icon-unfold mr-2"></i>
                Main Menu
            </button>
        </div>
        <div class="navbar-collapse collapse" id="navbar-navigation">
            <ul class="navbar-nav">
                <li id="Menu_Home" class="nav-item">
                    <a href="@Url.Action("Index", "Home", new { Area = "", rss=1 })" class="navbar-nav-link">
                        <i class="icon-home4 mr-2"></i>Dashboard
                    </a>
                </li>
                <li id="Menu_Settings" class="nav-item dropdown">
                    <a href="#" class="navbar-nav-link dropdown-toggle" data-toggle="dropdown">
                        <i class="icon-gear mr-2"></i>Settings
                    </a>
                    <div class="dropdown-menu">
                        <a href="@Url.Action("Edit", "Settings", new { Area = "" })" class="dropdown-item">General Settings</a>
                        <a href="@Url.Action("Index", "Regions", new { Area = "", rss=1 })" class="dropdown-item">Wilayah</a>
                        <div class="dropdown-submenu">
                            <a href="#" class="dropdown-item dropdown-toggle">Employee</a>
                            <div class="dropdown-menu">
                                <a href="@Url.Action("Index", "EmploymentTypes", new { Area = "", rss=1 })" class="dropdown-item">Tipe Kerja</a>
                                <a href="@Url.Action("Index", "MaritalStatuses", new { Area = "", rss=1 })" class="dropdown-item">Status Kawin</a>
                                <a href="@Url.Action("Index", "CounterAreas", new { Area = "", rss=1 })" class="dropdown-item">Area</a>
                                <a href="@Url.Action("Index", "PayrollDepartments", new { Area = "", rss=1 })" class="dropdown-item">Departemen</a>
                                <a href="@Url.Action("Index", "Banks", new { Area = "", rss=1 })" class="dropdown-item">Bank</a>
                            </div>
                        </div>
                        <div class="dropdown-submenu">
                            <a href="#" class="dropdown-item dropdown-toggle">Payroll</a>
                            <div class="dropdown-menu">
                                <a href="@Url.Action("Index", "PayrollPaymentDates", new { Area = "Payroll", rss=1 })" class="dropdown-item">Tgl Bayar</a>
                                <a href="@Url.Action("Index", "RegionPayrates", new { Area = "Payroll", rss=1 })" class="dropdown-item">UMP</a>
                                <a href="@Url.Action("Index", "PayrollEarnings", new { Area = "Payroll", rss=1 })" class="dropdown-item">Pendapatan</a>
                                <a href="@Url.Action("Index", "PayrollDeductions", new { Area = "Payroll", rss=1 })" class="dropdown-item">Pemotongan</a>
                                <a href="@Url.Action("Index", "PayrollDebts", new { Area = "Payroll", rss=1 })" class="dropdown-item">Hutang</a>
                            </div>
                        </div>
                        <div class="dropdown-submenu">
                            <a href="#" class="dropdown-item dropdown-toggle">Reimbursement</a>
                            <div class="dropdown-menu">
                                <a href="@Url.Action("Index", "ReimbursementPaymentDates", new { Area = "Reimbursement", rss=1 })" class="dropdown-item">Tgl Bayar</a>
                                <a href="@Url.Action("Index", "ReimbursementCategories", new { Area = "Reimbursement", rss=1 })" class="dropdown-item">Kategori</a>
                            </div>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <!-- /Secondary navbar ----------------------------------------------------------------------------------------------------------------------------->
    <!-- Page content ---------------------------------------------------------------------------------------------------------------------------------->
    <div class="page-content">
        <!-- Main content -->
        @RenderBody()
        <!-- /main content -->
    </div>
    <!-- /Page content --------------------------------------------------------------------------------------------------------------------------------->
    <!-- Footer ---------------------------------------------------------------------------------------------------------------------------------------->
    <div class="navbar navbar-expand-lg navbar-light">
        <div class="text-center d-lg-none w-100">
            <button type="button" class="navbar-toggler dropdown-toggle" data-toggle="collapse" data-target="#navbar-footer">
                <i class="icon-unfold mr-2"></i>
                Footer
            </button>
        </div>
        <div class="navbar-collapse collapse" id="navbar-footer">
            <span class="navbar-text">
                &copy; @DateTime.UtcNow.Year - @Helper.COMPANYNAME
            </span>
        </div>
        <div class="mt-2">
            <span class="badge badge-primary ml-2 px-2">
                <a href='@LIBUtil.Util.getApplicationPath(Request, "/User Manual - Payroll and Reimbursement.pdf")' class="text-white" target="_blank">MANUAL</a>
            </span>
            <span class="badge badge-success ml-2">@Helper.APP_VERSION</span>
        </div>
    </div>
    <!-- /Footer --------------------------------------------------------------------------------------------------------------------------------------->

</body>
</html>

<!-- hidden value to reset datatable state save -->
<span class="d-none removeDatatablesStateSave">@ViewBag.RemoveDatatablesStateSave</span>

<script type="text/javascript">

    //METHODS ======================================================================================================================================================

    function ZeroIfEmpty(value) { return setIfEmpty(value, 0); }
    function setIfEmpty(value, defaultValue) {
        if (value == '')
            return defaultValue;
        else
            return value;
    }

    //==============================================================================================================================================================

    $(document).ready(function () {
        $("input").attr("autocomplete", "off"); //turn off autocomplete
        $('.form-input-styled').uniform(); //??
        $('.select2').select2(); //apply filtering on dropdownlists
        $('form:not(.filter) :input:visible:enabled:first').select(); //select content of first control

        if (document.querySelector('.form-check-input-switchery') != null) {
            var switchery = new Switchery(document.querySelector('.form-check-input-switchery')); //on-off switch
        }

        applyEventsToInputs(); //call here so it is executed initially
        showBootboxMessage();
    });

    //format calendar
    $('.daterange-picker').daterangepicker({ singleDatePicker: true, locale: { format: 'YYYY/MM/DD' } });

    function applyEventsToInputs() {
        //45 = minus sign
        //46 = dot sign
        //48-57 = 0-9

        $('.numericonly').bind('keypress', function (e) {
            return event.charCode == 45 || event.charCode == 46 || (event.charCode >= 48 && event.charCode <= 57);
        });

        $('.positivenumericonly').bind('keypress', function (e) {
            return event.charCode == 46 || (event.charCode >= 48 && event.charCode <= 57);
        });

        $('.integeronly').bind('keypress', function (e) {
            return event.charCode == 45 || (event.charCode >= 48 && event.charCode <= 57);
        });

        $('.positiveintegeronly').bind('keypress', function (e) {
            return (event.charCode >= 48 && event.charCode <= 57);
        });

        //allow editing text after initial select all on focus
        $('input').on('focus', function (e) {
            $(this)
                .one('mouseup', function () {
                    $(this).select();
                    return false;
                })
                .select();
        });
    }

    //disable scrollwheel mouse on input type number
    $(document).on("wheel", "input[type=number]", function (e) {
        $(this).blur();
    });

    function Log(id) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetLog", "ActivityLogs", new { Area = "" })',
            data: {
                ReffId: id
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: 'Log',
                    size: 'large',
                    message: data.content,
                    backdrop: true
                }).off("shown.bs.modal"); //scroll to top
            }, //end success
            error: function (result) {
                bootbox.alert({ backdrop: true, message: "Error " + result });
            } //end error
        }); //end ajax
    }

    var datatable = $('.datatable').DataTable({
        autoWidth: false,
        pagingType: 'full_numbers',
        order: [[0, 'asc']],
        bStateSave: true,
        stateSaveCallback: function (settings, data) {
            localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))
        },
        stateLoadCallback: function (settings) {
            return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))
        },
        stateLoadParams: function (settings, data) {
            if ($(".removeDatatablesStateSave").text() == "1") {
                data.search.search = "";
                data.start = 0;
            }
        },
        columnDefs: [
            { searchable: false, targets: "non-searchable" },
            { orderable: false, targets: "non-sortable" }
        ],
        dom: '<"datatable-header"flp>' +
            '<"datatable-scroll"t>' +
            '<"datatable-footer"ilp>',
        language: {
            emptyTable: "Gunakan filter dan tekan tombol search untuk menampilkan data",
            search: '<span>Filter:</span> _INPUT_',
            searchPlaceholder: 'enter keyword',
            lengthMenu: '<span>Rows:</span> _MENU_',
            paginate: {
                'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;'
            }
        }
    });

    function getAllFilterString() { return getFilterString(null, null, null, null, null, null, null); }
    function getMainFilterString(year, month, payDate, search) { return getFilterString(year, month, payDate, null, null, search, null); }
    function getFilterString(year, month, payDate, approval, Banks_Id, search, Type) {
        var filter = "";

        filter += getFilter_YearAndMonth(year, month);

        if (payDate == null && $('#PayrollPaymentDates') != null)
            payDate = parseInt($('#PayrollPaymentDates option:selected').text());
        filter += validateFilter(payDate, "payDate");

        if (approval == null && $('#FILTER_Approval') != null)
            approval = parseInt($('#FILTER_Approval').val());
        filter += validateFilter(approval, "approval");

        if (Type == null && $('#FILTER_ActionType') != null)
            Type = parseInt($('#FILTER_ActionType').val());
        filter += validateFilter(Type, "Type");

        if (Banks_Id == null && $('#Banks') != null)
            Banks_Id = $('#Banks').val();
        filter += validateFilterNaN(Banks_Id, "Banks_Id");

        filter += getFilter_Search(search);

        return filter;
    }
    function getFilter_Year_Month_Search(year, month, search) {
        var filter = "";
        filter += getFilter_YearAndMonth(year, month);
        filter += getFilter_Search(search);
        return filter;
    }
    function getFilter_YearAndMonth(year, month) {
        var filter = "";

        if (year == null && $('#PayPeriodYear') != null)
            year = $('#PayPeriodYear').val();
        filter += validateFilter(year, "");

        if (month == null && $('#PayPeriodMonth') != null)
            month = $('#PayPeriodMonth').val();
        filter += validateFilter(month, "month");

        return filter;
    }
    function getFilter_Search(search) {
        var filter = "";

        if ((search == null || search == "") && $('input[aria-controls=DataTables_Table_0]').val() != undefined)
            search = $('input[aria-controls=DataTables_Table_0]').val();

        filter += validateFilterNaN(search, "search");

        return filter;
    }
    function validateFilter(value, filterName) {
        if (value != null && value.toString() != "" && isNaN(value) != true) {
            if (filterName == "")
                return value;
            else
                return "&" + filterName + "=" + value;
        }
        return "";
    }
    function validateFilterNaN(value, filterName) {
        if (value != null && value != "") {
            if (filterName == "")
                return value;
            else
                return "&" + filterName + "=" + value;
        }
        return "";
    }

    function getSearch() {
        if ((search == null || search == "") && $('input[aria-controls=DataTables_Table_0]').val() != undefined)
            return $('input[aria-controls=DataTables_Table_0]').val();
        else
            return "";
    }

    function setSearch(search) {
        if ($('input[aria-controls=DataTables_Table_0]').val() != undefined)
            $('input[aria-controls=DataTables_Table_0]').val(search).keyup();
    }

    function OpenWindow(url, opennewwindow) {
        if (opennewwindow == "true")
            window.open(url, '_blank');
        else
            window.location.href = url;
    }

    function parseJSONDate(value) {
        return new Date(parseInt((value).match(/\d+/)[0]));
    }

    var monthNames = ["Jan", "Feb", "Mar", "Apr",
        "May", "Jun", "Jul", "Aug",
        "Sep", "Oct", "Nov", "Dec"];
    function formatDate(date, format) {
        var result = "";
        if (format == 'dd MMM yyyy') {
            var dd = (('' + date.getDate()).length < 2 ? '0' : '') + date.getDate() + ' ';
            var MMM = monthNames[date.getMonth()];
            var yyyy = date.getFullYear();

            result = dd + ' ' + MMM + ' ' + yyyy;
        }
        return result;
    }

    function appendChange(log, oldValue, newValue, pretext) {
        if (oldValue != newValue)
            return append(log, pretext + "'" + oldValue + "' => '" + newValue + "'");
        else
            return log;
    }

    function append(log, newValue) {
        if (log == "" && newValue != "")
            return newValue;
        else if (newValue == "")
            return log;
        else {
            if (log != "")
                log += " <BR>";
            return log += newValue;
        }
    }

    function activateMenu(id) {
        $('#Menu_'+id).addClass('active');
    }

    function showBootboxMessage() {
        if ('@ViewBag.BootboxMessage' != '') {
            bootbox.alert({ backdrop: true, message: '@ViewBag.BootboxMessage' });
        }
    }

</script>